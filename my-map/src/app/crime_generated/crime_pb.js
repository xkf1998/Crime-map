// source: crime.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function () {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.crimemap.service.Crime', null, global);
goog.exportSymbol('proto.crimemap.service.GetCrimesRequest', null, global);
goog.exportSymbol('proto.crimemap.service.GetCrimesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.crimemap.service.GetCrimesRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.crimemap.service.GetCrimesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.crimemap.service.GetCrimesRequest.displayName = 'proto.crimemap.service.GetCrimesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.crimemap.service.Crime = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.crimemap.service.Crime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.crimemap.service.Crime.displayName = 'proto.crimemap.service.Crime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.crimemap.service.GetCrimesResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.crimemap.service.GetCrimesResponse.repeatedFields_, null);
};
goog.inherits(proto.crimemap.service.GetCrimesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.crimemap.service.GetCrimesResponse.displayName = 'proto.crimemap.service.GetCrimesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.crimemap.service.GetCrimesRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.crimemap.service.GetCrimesRequest.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.crimemap.service.GetCrimesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.crimemap.service.GetCrimesRequest.toObject = function (includeInstance, msg) {
    var f, obj = {
      timeMin: jspb.Message.getFieldWithDefault(msg, 1, 0),
      timeMax: jspb.Message.getFieldWithDefault(msg, 2, 0),
      longitudeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      longitudeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
      latitudeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
      latitudeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.crimemap.service.GetCrimesRequest}
 */
proto.crimemap.service.GetCrimesRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.crimemap.service.GetCrimesRequest;
  return proto.crimemap.service.GetCrimesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.crimemap.service.GetCrimesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.crimemap.service.GetCrimesRequest}
 */
proto.crimemap.service.GetCrimesRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setTimeMin(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setTimeMax(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLongitudeMin(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLongitudeMax(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLatitudeMin(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLatitudeMax(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.crimemap.service.GetCrimesRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.crimemap.service.GetCrimesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.crimemap.service.GetCrimesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.crimemap.service.GetCrimesRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getTimeMin();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTimeMax();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLongitudeMin();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLongitudeMax();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLatitudeMin();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getLatitudeMax();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional int64 time_min = 1;
 * @return {number}
 */
proto.crimemap.service.GetCrimesRequest.prototype.getTimeMin = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.GetCrimesRequest} returns this
 */
proto.crimemap.service.GetCrimesRequest.prototype.setTimeMin = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 time_max = 2;
 * @return {number}
 */
proto.crimemap.service.GetCrimesRequest.prototype.getTimeMax = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.GetCrimesRequest} returns this
 */
proto.crimemap.service.GetCrimesRequest.prototype.setTimeMax = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double longitude_min = 3;
 * @return {number}
 */
proto.crimemap.service.GetCrimesRequest.prototype.getLongitudeMin = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.GetCrimesRequest} returns this
 */
proto.crimemap.service.GetCrimesRequest.prototype.setLongitudeMin = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double longitude_max = 4;
 * @return {number}
 */
proto.crimemap.service.GetCrimesRequest.prototype.getLongitudeMax = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.GetCrimesRequest} returns this
 */
proto.crimemap.service.GetCrimesRequest.prototype.setLongitudeMax = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double latitude_min = 5;
 * @return {number}
 */
proto.crimemap.service.GetCrimesRequest.prototype.getLatitudeMin = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.GetCrimesRequest} returns this
 */
proto.crimemap.service.GetCrimesRequest.prototype.setLatitudeMin = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double latitude_max = 6;
 * @return {number}
 */
proto.crimemap.service.GetCrimesRequest.prototype.getLatitudeMax = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.GetCrimesRequest} returns this
 */
proto.crimemap.service.GetCrimesRequest.prototype.setLatitudeMax = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.crimemap.service.Crime.prototype.toObject = function (opt_includeInstance) {
    return proto.crimemap.service.Crime.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.crimemap.service.Crime} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.crimemap.service.Crime.toObject = function (includeInstance, msg) {
    var f, obj = {
      time: jspb.Message.getFieldWithDefault(msg, 1, 0),
      longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
      description: jspb.Message.getFieldWithDefault(msg, 4, "")
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.crimemap.service.Crime}
 */
proto.crimemap.service.Crime.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.crimemap.service.Crime;
  return proto.crimemap.service.Crime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.crimemap.service.Crime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.crimemap.service.Crime}
 */
proto.crimemap.service.Crime.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setTime(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLongitude(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setLatitude(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.crimemap.service.Crime.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.crimemap.service.Crime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.crimemap.service.Crime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.crimemap.service.Crime.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 time = 1;
 * @return {number}
 */
proto.crimemap.service.Crime.prototype.getTime = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.Crime} returns this
 */
proto.crimemap.service.Crime.prototype.setTime = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.crimemap.service.Crime.prototype.getLongitude = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.Crime} returns this
 */
proto.crimemap.service.Crime.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.crimemap.service.Crime.prototype.getLatitude = function () {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.crimemap.service.Crime} returns this
 */
proto.crimemap.service.Crime.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.crimemap.service.Crime.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.crimemap.service.Crime} returns this
 */
proto.crimemap.service.Crime.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.crimemap.service.GetCrimesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.crimemap.service.GetCrimesResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.crimemap.service.GetCrimesResponse.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.crimemap.service.GetCrimesResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.crimemap.service.GetCrimesResponse.toObject = function (includeInstance, msg) {
    var f, obj = {
      crimesList: jspb.Message.toObjectList(msg.getCrimesList(),
        proto.crimemap.service.Crime.toObject, includeInstance)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.crimemap.service.GetCrimesResponse}
 */
proto.crimemap.service.GetCrimesResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.crimemap.service.GetCrimesResponse;
  return proto.crimemap.service.GetCrimesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.crimemap.service.GetCrimesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.crimemap.service.GetCrimesResponse}
 */
proto.crimemap.service.GetCrimesResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.crimemap.service.Crime;
        reader.readMessage(value, proto.crimemap.service.Crime.deserializeBinaryFromReader);
        msg.addCrimes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.crimemap.service.GetCrimesResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.crimemap.service.GetCrimesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.crimemap.service.GetCrimesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.crimemap.service.GetCrimesResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getCrimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.crimemap.service.Crime.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Crime crimes = 1;
 * @return {!Array<!proto.crimemap.service.Crime>}
 */
proto.crimemap.service.GetCrimesResponse.prototype.getCrimesList = function () {
  return /** @type{!Array<!proto.crimemap.service.Crime>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.crimemap.service.Crime, 1));
};


/**
 * @param {!Array<!proto.crimemap.service.Crime>} value
 * @return {!proto.crimemap.service.GetCrimesResponse} returns this
*/
proto.crimemap.service.GetCrimesResponse.prototype.setCrimesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.crimemap.service.Crime=} opt_value
 * @param {number=} opt_index
 * @return {!proto.crimemap.service.Crime}
 */
proto.crimemap.service.GetCrimesResponse.prototype.addCrimes = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.crimemap.service.Crime, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.crimemap.service.GetCrimesResponse} returns this
 */
proto.crimemap.service.GetCrimesResponse.prototype.clearCrimesList = function () {
  return this.setCrimesList([]);
};


goog.object.extend(exports, proto.crimemap.service);
